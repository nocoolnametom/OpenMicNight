CREATE TABLE application (id BIGINT AUTO_INCREMENT, author_type_id BIGINT NOT NULL, subreddit_id BIGINT NOT NULL, restricted_until_previous_misses_deadline TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX oneOfEachAuthorTypePerSubreddit_idx (subreddit_id), INDEX author_type_id_idx (author_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE author_type (id BIGINT AUTO_INCREMENT, type VARCHAR(255) NOT NULL, description VARCHAR(127), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE deadline (id BIGINT AUTO_INCREMENT, author_type_id BIGINT NOT NULL, subreddit_id BIGINT NOT NULL, seconds BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX oneOfEachAuthorTypePerSubreddit_idx (subreddit_id), INDEX author_type_id_idx (author_type_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE episode (id BIGINT AUTO_INCREMENT, profile_id BIGINT NOT NULL, subreddit_id BIGINT NOT NULL, approved_by BIGINT, release_date DATETIME NOT NULL, audio_file VARCHAR(255), nice_filename VARCHAR(255), graphic_file VARCHAR(255), is_nsfw TINYINT(1) DEFAULT '0', title VARCHAR(255), description TEXT, is_submitted TINYINT(1) DEFAULT '0', submitted_at DATETIME, is_approved TINYINT(1) DEFAULT '0', approved_at DATETIME, reddit_post_url VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX approved_by_idx (approved_by), INDEX subreddit_id_idx (subreddit_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE episode_assignment (id BIGINT AUTO_INCREMENT, author_type_id BIGINT NOT NULL, profile_id BIGINT NOT NULL, episode_id BIGINT NOT NULL, missed_deadline TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX noMultipleProfileAssignmentsPerEpisode_idx (episode_id), UNIQUE INDEX noMultipleAuthorTypeAssignmentsPerEpisode_idx (episode_id), INDEX author_type_id_idx (author_type_id), INDEX profile_id_idx (profile_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE membership (id BIGINT AUTO_INCREMENT, type VARCHAR(255) NOT NULL, description VARCHAR(127), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE message (id BIGINT AUTO_INCREMENT, recipient_id BIGINT NOT NULL, sender_id BIGINT, previous_message_id BIGINT, text TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX sender_id_idx (sender_id), INDEX previous_message_id_idx (previous_message_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profile (id BIGINT AUTO_INCREMENT, email_address VARCHAR(255) NOT NULL, validation_key VARCHAR(127) NOT NULL, username VARCHAR(255) NOT NULL, password VARCHAR(127) NOT NULL, full_name VARCHAR(127), preferred_name VARCHAR(127), website VARCHAR(255), twitter_account VARCHAR(127), avatar VARCHAR(255), short_bio TEXT, prefer_html TINYINT(1) DEFAULT '0', address_line_one VARCHAR(127), address_line_two VARCHAR(127), city VARCHAR(127), state VARCHAR(127), zip_code VARCHAR(63), country VARCHAR(127), display_location TINYINT(1) DEFAULT '0', receive_private_messages_from_profile_page TINYINT(1) DEFAULT '1', receive_notification_of_private_messages TINYINT(1) DEFAULT '1', receive_notification_of_newly_opened_episodes TINYINT(1) DEFAULT '1', receive_notification_of_episode_approval_pending TINYINT(1) DEFAULT '1', last_logged_in DATETIME, is_validated TINYINT(1) DEFAULT '0', is_super_admin TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE profile_subreddit_membership (id BIGINT AUTO_INCREMENT, profile_id BIGINT NOT NULL, subreddit_id BIGINT NOT NULL, membership_id BIGINT NOT NULL, display_membersship TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, UNIQUE INDEX oneProfileMembershipPerSubreddit_idx (subreddit_id), INDEX profile_id_idx (profile_id), INDEX membership_id_idx (membership_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE subreddit (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, domain VARCHAR(127), is_active TINYINT(1) DEFAULT '0', create_new_episodes_cron_formatted VARCHAR(32) NOT NULL, episode_schedule_cron_formatted VARCHAR(32) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE validation (id BIGINT AUTO_INCREMENT, type VARCHAR(255) NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE application ADD CONSTRAINT application_subreddit_id_subreddit_id FOREIGN KEY (subreddit_id) REFERENCES subreddit(id) ON DELETE CASCADE;
ALTER TABLE application ADD CONSTRAINT application_author_type_id_author_type_id FOREIGN KEY (author_type_id) REFERENCES author_type(id) ON DELETE CASCADE;
ALTER TABLE deadline ADD CONSTRAINT deadline_subreddit_id_subreddit_id FOREIGN KEY (subreddit_id) REFERENCES subreddit(id) ON DELETE CASCADE;
ALTER TABLE deadline ADD CONSTRAINT deadline_author_type_id_author_type_id FOREIGN KEY (author_type_id) REFERENCES author_type(id) ON DELETE CASCADE;
ALTER TABLE episode ADD CONSTRAINT episode_subreddit_id_subreddit_id FOREIGN KEY (subreddit_id) REFERENCES subreddit(id) ON DELETE CASCADE;
ALTER TABLE episode ADD CONSTRAINT episode_approved_by_profile_id FOREIGN KEY (approved_by) REFERENCES profile(id) ON DELETE SET NULL;
ALTER TABLE episode_assignment ADD CONSTRAINT episode_assignment_profile_id_profile_id FOREIGN KEY (profile_id) REFERENCES profile(id) ON DELETE CASCADE;
ALTER TABLE episode_assignment ADD CONSTRAINT episode_assignment_episode_id_episode_id FOREIGN KEY (episode_id) REFERENCES episode(id) ON DELETE CASCADE;
ALTER TABLE episode_assignment ADD CONSTRAINT episode_assignment_author_type_id_author_type_id FOREIGN KEY (author_type_id) REFERENCES author_type(id) ON DELETE CASCADE;
ALTER TABLE message ADD CONSTRAINT message_sender_id_profile_id FOREIGN KEY (sender_id) REFERENCES profile(id) ON DELETE CASCADE;
ALTER TABLE message ADD CONSTRAINT message_previous_message_id_message_id FOREIGN KEY (previous_message_id) REFERENCES message(id) ON DELETE SET NULL;
ALTER TABLE profile_subreddit_membership ADD CONSTRAINT profile_subreddit_membership_subreddit_id_subreddit_id FOREIGN KEY (subreddit_id) REFERENCES subreddit(id) ON DELETE CASCADE;
ALTER TABLE profile_subreddit_membership ADD CONSTRAINT profile_subreddit_membership_profile_id_profile_id FOREIGN KEY (profile_id) REFERENCES profile(id) ON DELETE CASCADE;
ALTER TABLE profile_subreddit_membership ADD CONSTRAINT profile_subreddit_membership_membership_id_membership_id FOREIGN KEY (membership_id) REFERENCES membership(id) ON DELETE CASCADE;
